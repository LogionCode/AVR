
Z2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000098  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000ec  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000011c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000158  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000579  00000000  00000000  00000178  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004f9  00000000  00000000  000006f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001dc  00000000  00000000  00000bea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000dc8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000314  00000000  00000000  00000dec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00001100  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 4a 00 	jmp	0x94	; 0x94 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include<avr/io.h>


int main(void)
{
	DDRD |= 0x20; // pin 5 na lini d jako wyjscie
  6c:	8d 9a       	sbi	0x11, 5	; 17
	
	TCCR1A |= 0x82; // TIMER 1 w tryb fast PWM i tryb nieodwracaj¹cy
  6e:	8f b5       	in	r24, 0x2f	; 47
  70:	82 68       	ori	r24, 0x82	; 130
  72:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= 0x18; // TIMER 1 w tryb fast PWM
  74:	8e b5       	in	r24, 0x2e	; 46
  76:	88 61       	ori	r24, 0x18	; 24
  78:	8e bd       	out	0x2e, r24	; 46
	
	ICR1 = 23750; // szczyt ustawiony na 380ms
  7a:	86 ec       	ldi	r24, 0xC6	; 198
  7c:	9c e5       	ldi	r25, 0x5C	; 92
  7e:	97 bd       	out	0x27, r25	; 39
  80:	86 bd       	out	0x26, r24	; 38
	OCR1A = 11875; // moment porównania na 190ms
  82:	83 e6       	ldi	r24, 0x63	; 99
  84:	9e e2       	ldi	r25, 0x2E	; 46
  86:	9b bd       	out	0x2b, r25	; 43
  88:	8a bd       	out	0x2a, r24	; 42
	
	TCCR1B |= 0x03; // preskalar na 1/64
  8a:	8e b5       	in	r24, 0x2e	; 46
  8c:	83 60       	ori	r24, 0x03	; 3
  8e:	8e bd       	out	0x2e, r24	; 46
	
    while (1) 
    {	
		asm("nop");	
  90:	00 00       	nop
  92:	fe cf       	rjmp	.-4      	; 0x90 <main+0x24>

00000094 <_exit>:
  94:	f8 94       	cli

00000096 <__stop_program>:
  96:	ff cf       	rjmp	.-2      	; 0x96 <__stop_program>
